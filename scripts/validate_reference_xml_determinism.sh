#!/bin/bash
# Script para validar determinismo da simula√ß√£o de refer√™ncia comparando events.xml

echo "üî¨ VALIDA√á√ÉO DE DETERMINISMO - SIMULA√á√ÉO DE REFER√äNCIA (events.xml)"
echo "=================================================================="

# Configura√ß√µes
BASE_DIR="/home/dean/PhD/hyperbolic-time-chamber"
SCRIPTS_DIR="$BASE_DIR/scripts"
OUTPUT_DIR="$SCRIPTS_DIR/reference_xml_determinism"

# Criar diret√≥rio de sa√≠da
mkdir -p "$OUTPUT_DIR"

echo ""
echo "üìã CONFIGURA√á√ÉO DO TESTE:"
echo "  ‚Ä¢ Simula√ß√£o: Simula√ß√£o de refer√™ncia"
echo "  ‚Ä¢ Execu√ß√µes: 2 execu√ß√µes id√™nticas"
echo "  ‚Ä¢ Compara√ß√£o: Arquivos events.xml"
echo "  ‚Ä¢ Diret√≥rio de sa√≠da: $OUTPUT_DIR"
echo ""

echo "üöÄ EXECUTANDO SIMULA√á√ÉO DE REFER√äNCIA - EXECU√á√ÉO 1"
echo "================================================"

# Execu√ß√£o 1
echo "üìä Executando primeira simula√ß√£o..."
echo "‚è∞ In√≠cio: $(date)"

# Aqui voc√™ deve colocar o comando exato para executar sua simula√ß√£o de refer√™ncia
# Exemplo para MATSim:
# java -cp matsim.jar org.matsim.run.RunMatsim config.xml

# Exemplo para SUMO:
# sumo -c simulation.sumocfg --xml-output events1.xml

# Por enquanto, vou assumir um comando gen√©rico
echo "üîß CONFIGURE AQUI O COMANDO DA SUA SIMULA√á√ÉO DE REFER√äNCIA"
echo "   Exemplos:"
echo "   ‚Ä¢ MATSim: java -cp matsim.jar org.matsim.run.RunMatsim config.xml"
echo "   ‚Ä¢ SUMO: sumo -c simulation.sumocfg --xml-output events1.xml"
echo "   ‚Ä¢ Outro: seu_simulador --config config.xml --output events1.xml"

# Simular execu√ß√£o para demonstra√ß√£o
echo "‚ö†Ô∏è SIMULANDO EXECU√á√ÉO (substitua pelo comando real)..."
echo "   Comando seria algo como: seu_simulador --output $OUTPUT_DIR/events1.xml"

# Criar um arquivo XML de exemplo para demonstra√ß√£o
cat > "$OUTPUT_DIR/events1.xml" << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<events version="1.0">
<event time="7" type="actend" person="trip_317_1" link="201" actType="h" action="ok" />
<event time="7" type="departure" person="trip_317_1" link="201" legMode="car" action="ok" />
<event time="7" type="PersonEntersVehicle" person="trip_317_1" vehicle="trip_317_1" action="ok" />
<event time="7" type="wait2link" person="trip_317_1" link="201" vehicle="trip_317_1" action="ok" />
<event time="7" type="entered link" person="trip_317_1" link="201" vehicle="trip_317_1" action="ok" />
<event time="11" type="left link" person="trip_317_1" link="201" vehicle="trip_317_1" action="ok" />
<event time="11" type="entered link" person="trip_317_1" link="1009" vehicle="trip_317_1" action="ok" />
<event time="14" type="left link" person="trip_317_1" link="1009" vehicle="trip_317_1" action="ok" />
<event time="14" type="entered link" person="trip_317_1" link="1010" vehicle="trip_317_1" action="ok" />
<event time="17" type="left link" person="trip_317_1" link="1010" vehicle="trip_317_1" action="ok" />
<event time="17" type="entered link" person="trip_317_1" link="1011" vehicle="trip_317_1" action="ok" />
<event time="29" type="actend" person="trip_380_1" link="3067" actType="h" action="ok" />
<event time="29" type="departure" person="trip_380_1" link="3067" legMode="car" action="ok" />
<event time="29" type="PersonEntersVehicle" person="trip_380_1" vehicle="trip_380_1" action="ok" />
<event time="29" type="wait2link" person="trip_380_1" link="3067" vehicle="trip_380_1" action="ok" />
<event time="29" type="entered link" person="trip_380_1" link="3067" vehicle="trip_380_1" action="ok" />
<event time="31" type="left link" person="trip_317_1" link="1011" vehicle="trip_317_1" action="ok" />
<event time="31" type="entered link" person="trip_317_1" link="1012" vehicle="trip_317_1" action="ok" />
<event time="33" type="left link" person="trip_380_1" link="3067" vehicle="trip_380_1" action="ok" />
<event time="33" type="entered link" person="trip_380_1" link="81" vehicle="trip_380_1" action="ok" />
<event time="38" type="actend" person="trip_1037_1" link="423" actType="h" action="ok" />
<event time="38" type="departure" person="trip_1037_1" link="423" legMode="car" action="ok" />
</events>
EOF

echo "‚úÖ Primeira execu√ß√£o conclu√≠da"
echo "üìÑ Arquivo gerado: $OUTPUT_DIR/events1.xml"

echo ""
echo "‚è≥ Aguardando 5 segundos antes da segunda execu√ß√£o..."
sleep 5

echo ""
echo "üöÄ EXECUTANDO SIMULA√á√ÉO DE REFER√äNCIA - EXECU√á√ÉO 2"
echo "================================================"

# Execu√ß√£o 2
echo "üìä Executando segunda simula√ß√£o..."
echo "‚è∞ In√≠cio: $(date)"

echo "‚ö†Ô∏è SIMULANDO EXECU√á√ÉO (substitua pelo comando real)..."
echo "   Comando seria algo como: seu_simulador --output $OUTPUT_DIR/events2.xml"

# Para demonstra√ß√£o, criar arquivo id√™ntico (determin√≠stico) ou ligeiramente diferente (n√£o-determin√≠stico)
# Vou criar um arquivo ligeiramente diferente para mostrar detec√ß√£o de n√£o-determinismo
cat > "$OUTPUT_DIR/events2.xml" << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<events version="1.0">
<event time="7" type="actend" person="trip_317_1" link="201" actType="h" action="ok" />
<event time="7" type="departure" person="trip_317_1" link="201" legMode="car" action="ok" />
<event time="7" type="PersonEntersVehicle" person="trip_317_1" vehicle="trip_317_1" action="ok" />
<event time="7" type="wait2link" person="trip_317_1" link="201" vehicle="trip_317_1" action="ok" />
<event time="7" type="entered link" person="trip_317_1" link="201" vehicle="trip_317_1" action="ok" />
<event time="11" type="left link" person="trip_317_1" link="201" vehicle="trip_317_1" action="ok" />
<event time="11" type="entered link" person="trip_317_1" link="1009" vehicle="trip_317_1" action="ok" />
<event time="14" type="left link" person="trip_317_1" link="1009" vehicle="trip_317_1" action="ok" />
<event time="14" type="entered link" person="trip_317_1" link="1010" vehicle="trip_317_1" action="ok" />
<event time="17" type="left link" person="trip_317_1" link="1010" vehicle="trip_317_1" action="ok" />
<event time="17" type="entered link" person="trip_317_1" link="1011" vehicle="trip_317_1" action="ok" />
<event time="29" type="actend" person="trip_380_1" link="3067" actType="h" action="ok" />
<event time="29" type="departure" person="trip_380_1" link="3067" legMode="car" action="ok" />
<event time="29" type="PersonEntersVehicle" person="trip_380_1" vehicle="trip_380_1" action="ok" />
<event time="29" type="wait2link" person="trip_380_1" link="3067" vehicle="trip_380_1" action="ok" />
<event time="29" type="entered link" person="trip_380_1" link="3067" vehicle="trip_380_1" action="ok" />
<event time="31" type="left link" person="trip_317_1" link="1011" vehicle="trip_317_1" action="ok" />
<event time="31" type="entered link" person="trip_317_1" link="1012" vehicle="trip_317_1" action="ok" />
<event time="33" type="left link" person="trip_380_1" link="3067" vehicle="trip_380_1" action="ok" />
<event time="33" type="entered link" person="trip_380_1" link="81" vehicle="trip_380_1" action="ok" />
<event time="39" type="actend" person="trip_1037_1" link="423" actType="h" action="ok" />
<event time="39" type="departure" person="trip_1037_1" link="423" legMode="car" action="ok" />
</events>
EOF

echo "‚úÖ Segunda execu√ß√£o conclu√≠da"
echo "üìÑ Arquivo gerado: $OUTPUT_DIR/events2.xml"

echo ""
echo "üîç VERIFICANDO ARQUIVOS GERADOS"
echo "==============================="

if [ -f "$OUTPUT_DIR/events1.xml" ] && [ -f "$OUTPUT_DIR/events2.xml" ]; then
    echo "‚úÖ Ambos os arquivos XML foram gerados"
    
    size1=$(stat -f%z "$OUTPUT_DIR/events1.xml" 2>/dev/null || stat -c%s "$OUTPUT_DIR/events1.xml")
    size2=$(stat -f%z "$OUTPUT_DIR/events2.xml" 2>/dev/null || stat -c%s "$OUTPUT_DIR/events2.xml")
    
    echo "üìä Tamanhos dos arquivos:"
    echo "  ‚Ä¢ events1.xml: $size1 bytes"
    echo "  ‚Ä¢ events2.xml: $size2 bytes"
    
    # Contagem r√°pida de eventos
    events1=$(grep -c "<event" "$OUTPUT_DIR/events1.xml" 2>/dev/null || echo "0")
    events2=$(grep -c "<event" "$OUTPUT_DIR/events2.xml" 2>/dev/null || echo "0")
    
    echo "üìà N√∫mero de eventos:"
    echo "  ‚Ä¢ events1.xml: $events1 eventos"
    echo "  ‚Ä¢ events2.xml: $events2 eventos"
    
else
    echo "‚ùå Erro: Arquivos XML n√£o foram gerados corretamente"
    exit 1
fi

echo ""
echo "üî¨ EXECUTANDO AN√ÅLISE DE DETERMINISMO"
echo "====================================="

cd "$SCRIPTS_DIR"

echo "üìä Comparando arquivos events.xml..."

# Executar compara√ß√£o usando o script Python
/home/dean/PhD/hyperbolic-time-chamber/.venv/bin/python compare_events_xml.py \
    "$OUTPUT_DIR/events1.xml" \
    "$OUTPUT_DIR/events2.xml" \
    --output "$OUTPUT_DIR" \
    > "$OUTPUT_DIR/comparison_log.txt" 2>&1

if [ $? -eq 0 ]; then
    echo "‚úÖ An√°lise de determinismo conclu√≠da"
    
    # Mostrar resultado principal
    if [ -f "$OUTPUT_DIR/xml_determinism_report.txt" ]; then
        echo ""
        echo "üìÑ RESUMO DOS RESULTADOS:"
        echo "========================="
        grep -E "(SCORE DE DETERMINISMO|CONCLUS√ÉO)" "$OUTPUT_DIR/xml_determinism_report.txt" 2>/dev/null || echo "Ver relat√≥rio completo: $OUTPUT_DIR/xml_determinism_report.txt"
    fi
    
else
    echo "‚ùå Erro na an√°lise de determinismo"
    echo "üìÑ Log de erro: $OUTPUT_DIR/comparison_log.txt"
fi

echo ""
echo "üìÅ ARQUIVOS GERADOS:"
echo "==================="
find "$OUTPUT_DIR" -name "*.xml" -o -name "*.txt" -o -name "*.json" | sort | while read file; do
    size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file")
    echo "  üìÑ $(basename "$file") - $size bytes"
done

echo ""
echo "üéØ CONCLUS√ÉO DA VALIDA√á√ÉO"
echo "========================="
echo "‚úÖ Valida√ß√£o da simula√ß√£o de refer√™ncia conclu√≠da!"
echo "üìÅ Resultados salvos em: $OUTPUT_DIR"
echo ""
echo "üîç COMO INTERPRETAR OS RESULTADOS:"
echo "  ‚Ä¢ Score > 0.95: Simula√ß√£o de refer√™ncia √â DETERMIN√çSTICA ‚úÖ"
echo "  ‚Ä¢ Score 0.80-0.95: Simula√ß√£o de refer√™ncia √© QUASE DETERMIN√çSTICA ‚ö†Ô∏è"
echo "  ‚Ä¢ Score < 0.80: Simula√ß√£o de refer√™ncia N√ÉO √â DETERMIN√çSTICA ‚ùå"
echo ""
echo "üìä PR√ìXIMOS PASSOS:"
echo "  1. Verifique o relat√≥rio: $OUTPUT_DIR/xml_determinism_report.txt"
echo "  2. Analise as diferen√ßas: $OUTPUT_DIR/xml_determinism_comparison.json"
echo "  3. Se n√£o for determin√≠stica, investigue:"
echo "     ‚Ä¢ Random seed configuration"
echo "     ‚Ä¢ Non-deterministic algorithms"
echo "     ‚Ä¢ Concurrent execution issues"
echo ""
echo "üõ†Ô∏è PARA USAR COM SUA SIMULA√á√ÉO REAL:"
echo "  1. Substitua os comandos simulados pelos comandos reais"
echo "  2. Ajuste os caminhos dos arquivos de sa√≠da"
echo "  3. Configure random seed se necess√°rio"
echo "  4. Execute novamente o teste"