# Configura√ß√£o para usar persistence local (In-Memory) ao inv√©s de Cassandra
# OTIMIZADA: Minimiza snapshots para melhor performance

include "application.conf"

pekko {
    persistence {
      journal {
        plugin = "pekko.persistence.journal.inmem"
        auto-start-journals = ["pekko.persistence.journal.inmem"]
      }
      snapshot-store {
        plugin = "pekko.persistence.snapshot-store.local"
        auto-start-snapshot-stores = ["pekko.persistence.snapshot-store.local"]
      }
    }
}

# Configura√ß√£o do In-Memory Journal (sem depend√™ncias externas)
pekko.persistence.journal.inmem {
  # In-memory journal - n√£o precisa configura√ß√£o especial
}

# Configura√ß√£o do Local Snapshot Store
pekko.persistence.snapshot-store.local {
    dir = "/app/hyperbolic-time-chamber/snapshots"
}

# üÜï OTIMIZA√á√ïES DE PERFORMANCE PARA 1M SIMULA√á√ïES
pekko.actor {
    default-dispatcher {
        type = Dispatcher
        executor = "fork-join-executor"
        fork-join-executor {
            parallelism-min = 16
            parallelism-factor = 2.0
            parallelism-max = 64
        }
        throughput = 100
    }
}

# üõë REDUZIR SNAPSHOTS PARA PERFORMANCE
pekko.persistence {
    # Snapshots menos frequentes para simula√ß√µes grandes
    snapshot-store.local.snapshot-interval = 10000  # Snapshot a cada 10k eventos (padr√£o: 1000)
    
    # Configura√ß√µes para reduzir overhead
    journal.inmem {
        # Configura√ß√µes para reduzir memory usage
        max-message-batch-size = 200
    }
}